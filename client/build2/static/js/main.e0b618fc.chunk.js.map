{"version":3,"sources":["components/Homepage.js","components/PetForm.js","components/Details.js","components/EditForm.js","App.js","serviceWorker.js","index.js"],"names":["Homepage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","axios","get","then","res","setState","pets","data","catch","err","console","log","state","react_default","a","createElement","react_router_dom","to","map","pet","key","_id","name","type","Component","PetForm","changeName","e","objectSpread","target","value","changeType","changeDesc","description","changeSkill1","skill1","changeSkill2","skill2","changeSkill3","skill3","create","preventDefault","post","errors","history","push","likes","onSubmit","onChange","message","Details","match","params","concat","like","clicks","newLike","put","adopt","delete","onClick","disabled","EditForm","edit","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0b618fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass Homepage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pets: []\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get('http://localhost:8000/pets')\n            .then(res => {\n                this.setState({pets: res.data.pets})\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    render () {\n        return (\n            // <h1>Homepage</h1>\n            <div>\n                <p><Link to='/pets/new'>Add a pet to the shelter</Link></p>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.pets.map( pet => \n                                <tr key={pet._id}>\n                                    <td>{pet.name}</td>\n                                    <td>{pet.type}</td>\n                                    <td>\n                                        <Link to={'/pets/' + pet._id + '/details'}>\n                                            <button>Details</button>\n                                        </Link>\n                                        <Link to={'/pets/' + pet._id + '/edit'}>\n                                            <button>Edit</button>\n                                        </Link>     \n                                    </td>\n                                </tr>\n                            )\n                        }\n                    </tbody>    \n                </table>  \n            </div>\n                  \n        )\n    }\n}\n\nexport default Homepage;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass PetForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: {\n                name: '',\n                type: '',\n                description: '',\n                skill1: '',\n                skill2: '',\n                skill3: '',\n                likes: 0\n            },\n            errors: {}\n        }\n    }\n\n    changeName = (e) => {\n        this.setState({pet: {...this.state.pet, name: e.target.value }})\n    }\n\n    changeType = (e) => {\n        this.setState({pet: {...this.state.pet, type: e.target.value }})\n    }\n\n    changeDesc = (e) => {\n        this.setState({pet: {...this.state.pet, description: e.target.value }})\n    }\n\n    changeSkill1 = (e) => {\n        this.setState({pet: {...this.state.pet, skill1: e.target.value }})\n    }\n\n    changeSkill2 = (e) => {\n        this.setState({pet: {...this.state.pet, skill2: e.target.value }})\n    }\n\n    changeSkill3 = (e) => {\n        this.setState({pet: {...this.state.pet, skill3: e.target.value }})\n    }\n\n    create = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        axios.post('http://localhost:8000/pets', this.state.pet)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors){\n                    this.setState({errors: res.data.errors.errors});\n                } else {\n                    this.props.history.push('/');\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n    \n\n    render () {\n        return (\n            <div>\n                <h4>Know of a pet needing a home?</h4>\n                <p>The pet must have a name</p>\n                <form onSubmit={this.create}>\n                <p>Pet Name:&nbsp; \n                    <input type='text' onChange={this.changeName}/>\n                        {\n                            (this.state.errors.name) ? \n                            <span>{this.state.errors.name.message}</span> :\n                            <span></span>\n                        }\n                </p>\n                <p>Pet Type:&nbsp;\n                    <input type='text' onChange={this.changeType}/>\n                    {\n                            (this.state.errors.type) ? \n                            <span>{this.state.errors.type.message}</span> :\n                            <span></span>\n                        }\n                </p>\n                <p>Description:&nbsp;\n                    <input type='text' onChange={this.changeDesc}/>\n                    {\n                            (this.state.errors.description) ? \n                            <span>{this.state.errors.description.message}</span> :\n                            <span></span>\n                        }\n                </p>\n                Skills:&nbsp; \n                <ul>\n                    <li>Skill 1: <input type='text' onChange={this.changeSkill1}/></li>\n                    <li>Skill 2: <input type='text' onChange={this.changeSkill2}/></li>\n                    <li>Skill 3: <input type='text' onChange={this.changeSkill3}/></li>\n                </ul>\n                \n                <button type='submit'>Add Pet</button>\n                <Link to={'/'}>\n                    <button>Cancel</button>\n                </Link>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default PetForm;","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass Details extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: {\n                name: '',\n                type: '',\n                description: '',\n                skill1: '',\n                skill2: '',\n                skill3: '',\n                likes: 0\n            },\n            clicks: 0,\n            errors: {}\n        }\n    }\n\n    componentDidMount = () => {\n        //pull in specific id information from the edit link\n        console.log(this.props.match.params._id);\n        \n        axios.get(`http://localhost:8000/pets/${this.props.match.params._id}`)\n            .then(res => {\n                this.setState({pet: res.data.pet});\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    like = (e) => {\n        this.setState({clicks: this.state.clicks+1});\n        \n        let newLike = this.state.pet.likes + 1;\n        this.setState({pet: {...this.state.pet, likes: newLike} }, \n            () => {\n                axios.put(`http://localhost:8000/pets/${this.props.match.params._id}`,\n                this.state.pet)\n                    .then(res => {\n                        this.props.history.push();\n                    })\n                \n            }\n        )\n        \n\n    }\n\n    adopt = (e) => {\n        axios.delete(`http://localhost:8000/pets/${this.props.match.params._id}`)\n            .then(res => {\n                this.props.history.push('/');\n            })\n    }\n\n    \n    \n\n    render () {\n        \n        return (\n            <div>\n                <h3>Details about {this.state.pet.name}</h3>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>Pet type:</td>\n                            <td>{this.state.pet.type}</td>\n                        </tr>\n                        <br></br>\n                        <tr>\n                            <td>Description:</td>\n                            <td>{this.state.pet.description}</td>\n                        </tr>\n                        <br></br>\n                        <tr>\n                            <td>Skills:</td>\n                            <td>\n                                <li>{this.state.pet.skill1}</li>\n                                <li>{this.state.pet.skill2}</li>\n                                <li>{this.state.pet.skill3}</li>\n                                \n                            </td>\n                        </tr>\n                        <br></br>\n                        <tr>\n                            <td>Likes:</td>\n                            <td>{this.state.pet.likes}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <br></br>\n                <button onClick={this.like} disabled={this.state.clicks === 1}>Like this pet</button>\n                <button onClick={this.adopt}>Adopt this pet!</button>\n            </div>\n        )\n    }\n}\n\nexport default Details;","import React, { Component } from 'react';\nimport axios from 'axios';\n// import 'react-router';\nimport {Link} from 'react-router-dom';\n// import Details from './Details';\n\nclass EditForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: {\n                name: '',\n                type: '',\n                description: '',\n                skill1: '',\n                skill2: '',\n                skill3: '',\n                likes: 0\n            },\n            errors: {}\n        }\n    }\n\n    componentDidMount = () => {\n        //pull in specific id information from the edit link\n        console.log(this.props.match.params._id);\n        axios.get(`http://localhost:8000/pets/${this.props.match.params._id}`)\n            .then(res => {\n                this.setState({pet: res.data.pet});\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    changeName = (e) => {\n        this.setState({pet: {...this.state.pet, name: e.target.value }})\n    }\n\n    changeType= (e) => {\n        this.setState({pet: {...this.state.pet, type: e.target.value }})\n    }\n\n    changeDesc = (e) => {\n        this.setState({pet: {...this.state.pet, description: e.target.value }})\n    }\n\n    changeSkill1 = (e) => {\n        this.setState({pet: {...this.state.pet, skill1: e.target.value }})\n    }\n\n    changeSkill2 = (e) => {\n        this.setState({pet: {...this.state.pet, skill2: e.target.value }})\n    }\n\n    changeSkill3 = (e) => {\n        this.setState({pet: {...this.state.pet, skill3: e.target.value }})\n    }\n\n    edit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        //pass to backend\n        axios.put(`http://localhost:8000/pets/${this.props.match.params._id}`, \n        this.state.pet)\n            .then(res => {\n                if(res.data.errors){\n                    this.setState({errors: res.data.errors.errors});\n                } else {\n                    this.props.history.push('/pets/' + this.props.match.params._id+ '/details');\n                }\n                console.log(res);\n\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    // check = (e) => {\n    //     axios.get('http://localhost:8000/pets')\n    //         .then(res => {\n    //             let checkPets = res.data.pets;\n    //             let names = [];\n    //             for(let i=0; i<checkPets.length; i++){\n    //                 names.push(checkPets[i].name);\n    //             }\n    //             console.log(names)\n    //         })\n    // }\n\n\n    render () {\n        return (\n            <div>\n                <h3>Edit this pet</h3>\n                <form onSubmit={this.edit}>\n                <p>Pet Name:&nbsp; \n                    <input type='text' onChange={this.changeName} value={this.state.pet.name}/>\n                        {\n                            (this.state.errors.name) ? \n                            <span>{this.state.errors.name.message}</span> :\n                            <span></span>\n                        }\n                        \n                </p>\n                <p>Pet Type:&nbsp;\n                    <input type='text' onChange={this.changeType} value={this.state.pet.type}/>\n                        {\n                            (this.state.errors.type) ? \n                            <span>{this.state.errors.type.message}</span> :\n                            <span></span>\n                        }\n                </p>\n                <p>Description:&nbsp;\n                    <input type='text' onChange={this.changeDesc} value={this.state.pet.description}/>\n                        {\n                            (this.state.errors.description) ? \n                            <span>{this.state.errors.description.message}</span> :\n                            <span></span>\n                        }\n                </p>\n                Skills:&nbsp; \n                <ul>\n                    <li>Skill 1: <input type='text' onChange={this.changeSkill1} value={this.state.pet.skill1}/></li>\n                    <li>Skill 2: <input type='text' onChange={this.changeSkill2} value={this.state.pet.skill2}/></li>\n                    <li>Skill 3: <input type='text' onChange={this.changeSkill3} value={this.state.pet.skill3}/></li>\n                </ul>\n                <button type='submit'>Edit Pet</button>\n                {/* <Link to={'/pets' + this.props.match.params._id+ '/details'} component={Details}>\n                    \n                </Link>  */}\n                <Link to={'/pets/' + this.props.match.params._id+ '/details'}>\n                    <button>Cancel</button>\n                </Link>\n                </form>\n\n                {/* <button onClick={this.check}>Check</button> */}\n            </div>\n                \n             \n        );\n    }\n}\n\nexport default EditForm;","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport 'react-router';\nimport { Link, BrowserRouter, Route } from 'react-router-dom';\nimport Homepage from './components/Homepage';\nimport PetForm from './components/PetForm';\nimport Details from './components/Details';\nimport EditForm from './components/EditForm';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Pet Shelter</h1>\n        \n        <BrowserRouter>\n          <p><Link to='/'>Home</Link></p>\n  \n          <Route exact path='/' component={Homepage} />\n          <Route exact path='/pets/new' component={PetForm} />\n          <Route exact path='/pets/:_id/details' component={Details} />\n          <Route exact path='/pets/:_id/edit' component={EditForm} />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}